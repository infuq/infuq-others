1.安装bochs
2.配置bochsrc文件
3.制作镜像
[root@infuq /] bximage

4.制作操作系统
建议在Ubuntu16-32bit环境下执行
nasm -I ./include/ mbr.asm -f bin -o out/mbr.bin
nasm -I ./include/ loader.asm -f bin -o out/loader.bin
nasm ./lib/kernel/print.asm -f elf -o out/print.o
nasm ./kernel/kernel.asm -f elf -o out/kernel.o


gcc -m32 -I ./lib/ -I ./lib/kernel -I ./lib/user -c -fno-builtin -fno-stack-protector -o out/string.o lib/string.c
gcc -m32 -I ./lib/kernel/ -c -fno-builtin -fno-stack-protector -o out/bitmap.o kernel/bitmap.c
gcc -m32 -I ./lib/kernel/ -c -fno-builtin -fno-stack-protector -o out/memory.o kernel/memory.c
gcc -m32 -I ./lib/kernel/ -c -fno-builtin -fno-stack-protector -o out/interrupt.o kernel/interrupt.c
gcc -m32 -I ./lib/kernel/ -c -fno-builtin -fno-stack-protector -o out/init.o kernel/init.c
gcc -m32 -I ./lib/kernel/ -c -fno-builtin -fno-stack-protector -o out/main.o kernel/main.c

ld -m elf_i386 -Ttext 0xc0001500 -e main -o out/kernel.bin out/main.o out/print.o out/init.o out/interrupt.o out/kernel.o out/bitmap.o out/memory.o out/string.o


dd if=out/mbr.bin of=infuq-os.img bs=512 count=1 conv=notrunc
dd if=out/loader.bin of=infuq-os.img bs=512 count=4 seek=2  conv=notrunc
dd if=out/kernel.bin of=infuq-os.img bs=512 count=200 seek=9  conv=notrunc



5.运行
[root@infuq /] bochs -f bochsrc
切记:不要在Windows平台模拟运行.





附录
1.查看目标文件格式
file main.o

2.
[nasm生成64位目标文件]
nasm ./lib/kernel/print.asm -f elf64 -o out/print.o

[gcc生成32位目标文件]
gcc -m32 -I ./lib/kernel/ -c -o out/main.o main.c

[ld链接32位目标文件]
ld -m elf_i386 -Ttext 0xc0001500 -e main -o out/kernel.bin out/main.o out/print.o
